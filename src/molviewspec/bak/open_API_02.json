{
  "openapi": "3.0.0",
  "info": {
    "title": "MolViewSpec Node Schema OpenAPI",
    "version": "0.1"
  },
  "paths": {},
  "components": {
    "schemas": {
      "ComponentExpression": {
        "title": "ComponentExpression",
        "type": "object",
        "properties": {
          "label_entity_id": {
            "title": "Label Entity Id",
            "type": "string"
          },
          "label_asym_id": {
            "title": "Label Asym Id",
            "type": "string"
          },
          "auth_asym_id": {
            "title": "Auth Asym Id",
            "type": "string"
          },
          "label_seq_id": {
            "title": "Label Seq Id",
            "type": "integer"
          },
          "auth_seq_id": {
            "title": "Auth Seq Id",
            "type": "integer"
          },
          "pdbx_PDB_ins_code": {
            "title": "Pdbx Pdb Ins Code",
            "type": "string"
          },
          "beg_label_seq_id": {
            "title": "Beg Label Seq Id",
            "description": "Defines a consecutive range of residues when combined with `end_label_seq_id`.",
            "type": "integer"
          },
          "end_label_seq_id": {
            "title": "End Label Seq Id",
            "description": "Defines a consecutive range of residues when combined with `beg_label_seq_id`. End indices are inclusive.",
            "type": "integer"
          },
          "beg_auth_seq_id": {
            "title": "Beg Auth Seq Id",
            "description": "Defines a consecutive range of residues when combined with `end_auth_seq_id`.",
            "type": "integer"
          },
          "end_auth_seq_id": {
            "title": "End Auth Seq Id",
            "description": "Defines a consecutive range of residues when combined with `beg_auth_seq_id`. End indices are inclusive.",
            "type": "integer"
          },
          "residue_index": {
            "title": "Residue Index",
            "description": "0-based residue index in the source file",
            "type": "integer"
          },
          "label_atom_id": {
            "title": "Label Atom Id",
            "description": "Atom name like 'CA', 'N', 'O' (`_atom_site.label_atom_id`)",
            "type": "string"
          },
          "auth_atom_id": {
            "title": "Auth Atom Id",
            "description": "Atom name like 'CA', 'N', 'O' (`_atom_site.auth_atom_id`)",
            "type": "string"
          },
          "type_symbol": {
            "title": "Type Symbol",
            "description": "Element symbol like 'H', 'HE', 'LI', 'BE' (`_atom_site.type_symbol`)",
            "type": "string"
          },
          "atom_id": {
            "title": "Atom Id",
            "description": "Unique atom identifier (`_atom_site.id`)",
            "type": "integer"
          },
          "atom_index": {
            "title": "Atom Index",
            "description": "0-based atom index in the source file",
            "type": "integer"
          }
        }
      },
      "ComponentFromSourceParams": {
        "title": "ComponentFromSourceParams",
        "type": "object",
        "properties": {
          "category_name": {
            "title": "Category Name",
            "type": "string"
          },
          "field_name": {
            "title": "Field Name",
            "description": "Name of the column in CIF that contains the desired value (color/label/tooltip/component...); the default value is 'color'/'label'/'tooltip'/'component' depending on the node kind",
            "type": "string"
          },
          "block_header": {
            "title": "Block Header",
            "type": "string"
          },
          "block_index": {
            "title": "Block Index",
            "type": "integer"
          },
          "schema": {
            "title": "Schema",
            "enum": [
              "whole_structure",
              "entity",
              "chain",
              "auth_chain",
              "residue",
              "auth_residue",
              "residue_range",
              "auth_residue_range",
              "atom",
              "auth_atom",
              "all_atomic"
            ],
            "type": "string"
          },
          "field_values": {
            "title": "Field Values",
            "description": "Create the component from rows that have any of these values in the field specified by `field_name`. If not provided, create the component from all rows.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["category_name", "schema"]
      },
      "ComponentFromUriParams": {
        "title": "ComponentFromUriParams",
        "type": "object",
        "properties": {
          "uri": {
            "title": "Uri",
            "type": "string"
          },
          "format": {
            "title": "Format",
            "enum": ["cif", "bcif", "json"],
            "type": "string"
          },
          "category_name": {
            "title": "Category Name",
            "description": "Only applies when format is 'cif' or 'bcif'",
            "type": "string"
          },
          "field_name": {
            "title": "Field Name",
            "description": "Name of the column in CIF or field name (key) in JSON that contains the desired value (color/label/tooltip/component...); the default value is 'color'/'label'/'tooltip'/'component' depending on the node kind",
            "type": "string"
          },
          "block_header": {
            "title": "Block Header",
            "description": "Only applies when format is 'cif' or 'bcif'",
            "type": "string"
          },
          "block_index": {
            "title": "Block Index",
            "description": "Only applies when format is 'cif' or 'bcif'",
            "type": "integer"
          },
          "schema": {
            "title": "Schema",
            "enum": [
              "whole_structure",
              "entity",
              "chain",
              "auth_chain",
              "residue",
              "auth_residue",
              "residue_range",
              "auth_residue_range",
              "atom",
              "auth_atom",
              "all_atomic"
            ],
            "type": "string"
          },
          "field_values": {
            "title": "Field Values",
            "description": "Create the component from rows that have any of these values in the field specified by `field_name`. If not provided, create the component from all rows.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["uri", "format", "schema"]
      },
      "ComponentInlineParams": {
        "title": "ComponentInlineParams",
        "type": "object",
        "properties": {
          "selector": {
            "title": "Selector",
            "description": "Describes one or more selections or one of the enumerated selectors.",
            "anyOf": [
              {
                "enum": [
                  "all",
                  "polymer",
                  "protein",
                  "nucleic",
                  "branched",
                  "ligand",
                  "ion",
                  "water"
                ],
                "type": "string"
              },
              {
                "$ref": "#/definitions/ComponentExpression"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ComponentExpression"
                }
              }
            ]
          }
        },
        "required": ["selector"],
        "definitions": {
          "ComponentExpression": {
            "title": "ComponentExpression",
            "type": "object",
            "properties": {
              "label_entity_id": {
                "title": "Label Entity Id",
                "type": "string"
              },
              "label_asym_id": {
                "title": "Label Asym Id",
                "type": "string"
              },
              "auth_asym_id": {
                "title": "Auth Asym Id",
                "type": "string"
              },
              "label_seq_id": {
                "title": "Label Seq Id",
                "type": "integer"
              },
              "auth_seq_id": {
                "title": "Auth Seq Id",
                "type": "integer"
              },
              "pdbx_PDB_ins_code": {
                "title": "Pdbx Pdb Ins Code",
                "type": "string"
              },
              "beg_label_seq_id": {
                "title": "Beg Label Seq Id",
                "description": "Defines a consecutive range of residues when combined with `end_label_seq_id`.",
                "type": "integer"
              },
              "end_label_seq_id": {
                "title": "End Label Seq Id",
                "description": "Defines a consecutive range of residues when combined with `beg_label_seq_id`. End indices are inclusive.",
                "type": "integer"
              },
              "beg_auth_seq_id": {
                "title": "Beg Auth Seq Id",
                "description": "Defines a consecutive range of residues when combined with `end_auth_seq_id`.",
                "type": "integer"
              },
              "end_auth_seq_id": {
                "title": "End Auth Seq Id",
                "description": "Defines a consecutive range of residues when combined with `beg_auth_seq_id`. End indices are inclusive.",
                "type": "integer"
              },
              "residue_index": {
                "title": "Residue Index",
                "description": "0-based residue index in the source file",
                "type": "integer"
              },
              "label_atom_id": {
                "title": "Label Atom Id",
                "description": "Atom name like 'CA', 'N', 'O' (`_atom_site.label_atom_id`)",
                "type": "string"
              },
              "auth_atom_id": {
                "title": "Auth Atom Id",
                "description": "Atom name like 'CA', 'N', 'O' (`_atom_site.auth_atom_id`)",
                "type": "string"
              },
              "type_symbol": {
                "title": "Type Symbol",
                "description": "Element symbol like 'H', 'HE', 'LI', 'BE' (`_atom_site.type_symbol`)",
                "type": "string"
              },
              "atom_id": {
                "title": "Atom Id",
                "description": "Unique atom identifier (`_atom_site.id`)",
                "type": "integer"
              },
              "atom_index": {
                "title": "Atom Index",
                "description": "0-based atom index in the source file",
                "type": "integer"
              }
            }
          }
        }
      },
      "DownloadParams": {
        "title": "DownloadParams",
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "description": "URL from which to pull structure data.",
            "type": "string"
          }
        },
        "required": ["url"]
      },
      "FocusInlineParams": {
        "title": "FocusInlineParams",
        "type": "object",
        "properties": {
          "direction": {
            "title": "Direction",
            "description": "Direction of the view (vector position -> target)",
            "type": "array",
            "minItems": 3,
            "maxItems": 3,
            "items": [
              {
                "type": "number"
              },
              {
                "type": "number"
              },
              {
                "type": "number"
              }
            ]
          },
          "up": {
            "title": "Up",
            "description": "Controls the rotation around the vector between target and position",
            "type": "array",
            "minItems": 3,
            "maxItems": 3,
            "items": [
              {
                "type": "number"
              },
              {
                "type": "number"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "LabelFromSourceParams": {
        "title": "LabelFromSourceParams",
        "type": "object",
        "properties": {
          "category_name": {
            "title": "Category Name",
            "type": "string"
          },
          "field_name": {
            "title": "Field Name",
            "description": "Name of the column in CIF that contains the desired value (color/label/tooltip/component...); the default value is 'color'/'label'/'tooltip'/'component' depending on the node kind",
            "type": "string"
          },
          "block_header": {
            "title": "Block Header",
            "type": "string"
          },
          "block_index": {
            "title": "Block Index",
            "type": "integer"
          },
          "schema": {
            "title": "Schema",
            "enum": [
              "whole_structure",
              "entity",
              "chain",
              "auth_chain",
              "residue",
              "auth_residue",
              "residue_range",
              "auth_residue_range",
              "atom",
              "auth_atom",
              "all_atomic"
            ],
            "type": "string"
          }
        },
        "required": ["category_name", "schema"]
      },
      "LabelFromUriParams": {
        "title": "LabelFromUriParams",
        "type": "object",
        "properties": {
          "uri": {
            "title": "Uri",
            "type": "string"
          },
          "format": {
            "title": "Format",
            "enum": ["cif", "bcif", "json"],
            "type": "string"
          },
          "category_name": {
            "title": "Category Name",
            "description": "Only applies when format is 'cif' or 'bcif'",
            "type": "string"
          },
          "field_name": {
            "title": "Field Name",
            "description": "Name of the column in CIF or field name (key) in JSON that contains the desired value (color/label/tooltip/component...); the default value is 'color'/'label'/'tooltip'/'component' depending on the node kind",
            "type": "string"
          },
          "block_header": {
            "title": "Block Header",
            "description": "Only applies when format is 'cif' or 'bcif'",
            "type": "string"
          },
          "block_index": {
            "title": "Block Index",
            "description": "Only applies when format is 'cif' or 'bcif'",
            "type": "integer"
          },
          "schema": {
            "title": "Schema",
            "enum": [
              "whole_structure",
              "entity",
              "chain",
              "auth_chain",
              "residue",
              "auth_residue",
              "residue_range",
              "auth_residue_range",
              "atom",
              "auth_atom",
              "all_atomic"
            ],
            "type": "string"
          }
        },
        "required": ["uri", "format", "schema"]
      },
      "LabelInlineParams": {
        "title": "LabelInlineParams",
        "type": "object",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": ["text"]
      }
    }
  }
}
